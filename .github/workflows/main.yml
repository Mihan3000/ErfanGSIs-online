name: Build

on:
#  release:
#    types: [published]
  push:
    branches:
      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
#  workflow_dispatch
    
env:
  ROM_URL: https://altushost-swe.dl.sourceforge.net/project/xiaomi-eu-multilang-miui-roms/xiaomi.eu/MIUI-STABLE-RELEASES/MIUIv12/xiaomi.eu_multi_HMNote8_V12.5.5.0.RCOCNXM_v12-11.zip?viasf=1
  ROM_NAME: Generic
  BUILD_TYPE: ab
  TZ: Asia/Shanghai

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"
        echo "::endgroup::"
    steps:
       - name: Checkout
         uses: actions/checkout@master
           
       - name: Initialization environment
         run: | 
            PATH="/usr/local/opt/grep/libexec/gnubin:$PATH"
            brew install coreutils grep gawk s3fs erofs-utils ext2fuse
            #wget https://downloads.sourceforge.net/project/fuse-ext2/fuse-ext2/fuse-ext2-0.0.7/fuse-ext2-0.0.7.tar.gz?ts=gAAAAABj5Z_hRqj-ANDQKM3fBfA3br1ghy9UDNCfPG5H2AgpOAPj2TzA359OmCEfHlnwU7oRYTgw6u6WEHK23vFkVPB2-IVvKw%3D%3D&use_mirror=master&r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Ffuse-ext2%2Ffiles%2F -O fuse-ext2-0.0.7.tar.gz
            brew create https://downloads.sourceforge.net/project/fuse-ext2/fuse-ext2/fuse-ext2-0.0.7/fuse-ext2-0.0.7.tar.gz?ts=gAAAAABj5Z_hRqj-ANDQKM3fBfA3br1ghy9UDNCfPG5H2AgpOAPj2TzA359OmCEfHlnwU7oRYTgw6u6WEHK23vFkVPB2-IVvKw%3D%3D&use_mirror=master&r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Ffuse-ext2%2Ffiles%2F
            wget https://github.com/osxfuse/osxfuse/releases/download/macfuse-4.4.1/macfuse-4.4.1.dmg
            mv macfuse-4.4.1.dmg macfuse.dmg
            sudo hdiutil attach macfuse.dmg
            sudo installer -pkg "/Volumes/macFUSE/Install macFUSE.pkg" -target /
            sudo hdiutil detach /Volumes/macFUSE

       - name: Clone ErfanGSI Source Code
         run: git clone --recurse-submodules https://github.com/erfanoabdi/ErfanGSIs.git ErfanGSIs
         
#       - name: Fix exit
#         run: |
#              sed -i 's/\|\| exit 1//g' $GITHUB_WORKSPACE/ErfanGSIs/url2GSI.sh
#              sed -i 's/exit 1//g' $GITHUB_WORKSPACE/ErfanGSIs/url2GSI.sh
       
       - name: Setting up ErfanGSI requirements with XiaoxinSGSI setup script
         run: |
              cd $GITHUB_WORKSPACE/ErfanGSIs
              mkdir ./output
              sudo bash ./setup.sh
              
       - name: Download Stock Rom & Generate GSI
         run: |
             cd $GITHUB_WORKSPACE/ErfanGSIs
             sudo bash ./url2GSI.sh -c --$BUILD_TYPE $ROM_URL $ROM_NAME
       
       - name: Zip GSI  
         run: |
              cd $GITHUB_WORKSPACE/ErfanGSIs/output
              mkdir upload
              zip -r GSI.zip ./*
              if [[ $(du -sb "GSI.zip" | awk '{print $1}') -gt 2097152000 ]];then
                  echo -e "split packaging..."
                  tar -cpzf - "GSI.zip" | split -d -b 1024m - "upload/GSI.zip"
              else
                  mv GSI.zip upload/
              fi
              ls "upload"                  
              
       - name: Upload SGSI to action-release...
         uses: ncipollo/release-action@v1.8.6
         with:
           artifacts: ${{ github.workspace }}/ErfanGSIs/output/upload/*
           name: ErfanGSIs-${{ env.ROM_NAME }}-${{ env.BUILD_TYPE }}
           tag: ErfanGSIs-${{ env.ROM_NAME }}-${{ env.BUILD_TYPE }}-${{ github.run_number }}
           token: ${{ secrets.TEST }}
